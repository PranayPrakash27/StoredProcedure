SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Tanmoy
-- Create date: 09-Aug-2017
-- Description:	Sales Return Automatic Refund
-- =============================================
 CREATE PROCEDURE [PaymentManagement].[uspPopulateCustWalletAgainstReturnforClosedData]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  DECLARE
    @pPaymentStartDate datetime,
    @pPaymentEndDate  datetime,
	@pSalesReturnStartDate datetime,
	@pSalesReturnEndDate datetime

	DECLARE @vDT DATE

	SELECT @vDT = CONVERT(DATE,DATEADD(DD,-1,GETDATE()))

BEGIN TRY

--SELECT  @pPaymentEndDate = MAX(Updateddate) ,@pSalesReturnStartDate = MAX(SalesReturnDate) FROM PaymentManagement.tblRefundOrderPayment
--  ---SET @pPaymentStartDate = ISNULL(@pPaymentStartDate,'2017-03-20 11:00:00.0000')
--  ---SET @pPaymentEndDate = DATEADD(MINUTE,-30,GETDATE())
--  SET @pSalesReturnStartDate = ISNULL(@pSalesReturnStartDate,GETDATE()-1)
--  SET @pSalesReturnEndDate = GETDATE()

CREATE TABLE #tblInvoiceOrder(InvoiceId bigint,InvoiceItemId bigint,AcceptedQty numeric(10,2),IsfullSalesReturn bit,ReturnQty NUMERIC(10,2),SalesReturnItemId BIGINT)
INSERT INTO #tblInvoiceOrder
SELECT s.InvoiceId,si.InvoiceItemId,si.AcceptedQty,s.IsFullReturn,ReturnQty,si.SalesReturnItemId
FROM Orders.tblSalesReturn s
INNER JOIN Orders.tblSalesReturnItemCust si on s.SalesReturnId = si.SalesReturnId
WHERE si.SalesReturnStatusId  IN (6)
and  ReturnQty !=0
AND ISNULL(CONVERT(DATE,si.ClosedDate),CONVERT(DATE,si.Updateddate))= @vDT
AND CONVERT(DATE,si.CreatedDate)>= '08/09/2021'
AND ISNULL(si.IsWalletRefundInitiated,0)=0
AND ISNULL(si.PaymentPefMode,'') IN ('', 'B')
AND s.InvoiceId NOT IN (SELECT InvoiceId FROm Orders.tblInvoice inv with(nolock)
			INNER JOIN Orders.tblOrder ord with(nolock) on Inv.OrderId =ord.OrderId
			WHERE (ord.OrderStatusId IN (7,6,13) OR ord.HBId  IN (10149,369097,3629417,3632944,4778526)))




INSERT INTO [PaymentManagement].[tblWalletRefund](ReturnId,OrderId,CustUserId,InvHBId,OrdHBId,RefundAmount,CreatedDate,UpdatedDate,IsProcessed,RvpClosedDate)   -- updated by pranay on 20.12.2022

    SELECT inv.SalesReturnId as ReturnId,inv.OrderId as OrderId     -- updated by pranay on 20.12.2022
			,CASE WHEN Net - (inv.OrderRefundAmount + ISNULL(toref.WalletReverse,0))>=-1 AND
			Net - (inv.RefundAmount + ISNULL(toref.WalletReverse,0))>=-1 THEN inv.RefundAmount ELSE 0 END AS RefundAmount
			,inv.CreatedDate,inv.UpdatedDate,inv.IsProcessed,@vDT as ClosedDate
		FROM
			(
			SELECT tsr.SalesReturnId,inv.OrderId,inv.CustUserId, inv.HBId AS InvHBId,ord.HBId AS OrdHBId,OnlineRefundAmount     -- updated by pranay on 20.12.2022

            -- <added by pranay on 20.12.2022

			,CONVERT(numeric(10,4),CASE WHEN CodPayment - (CASE WHEN (tbl.SalesReturnGrossAmt - ISNULL(tbl.SalesReturnCashDiscount,0.000)-ISNULL(tbl.SalesReturnCouponDiscount,0.000) - ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000))))*(tbl.SalesReturnGrossAmt -
					(ISNULL(tbl.SalesReturnCashDiscount,0.000)+ ISNULL(tbl.SalesReturnCouponDiscount,0.000) + ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) <= 0 THEN 0

					ELSE

					(tbl.SalesReturnGrossAmt - ISNULL(tbl.SalesReturnCashDiscount,0.000)-ISNULL(tbl.SalesReturnCouponDiscount,0.000) - ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tbl.SalesReturnGrossAmt -
					(ISNULL(tbl.SalesReturnCashDiscount,0.000)+ ISNULL(tbl.SalesReturnCouponDiscount,0.000) + ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) END ) < 0 THEN CodPayment

					ELSE
					 (CASE WHEN (tbl.SalesReturnGrossAmt - ISNULL(tbl.SalesReturnCashDiscount,0.000)-ISNULL(tbl.SalesReturnCouponDiscount,0.000) - ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tbl.SalesReturnGrossAmt -
					(ISNULL(tbl.SalesReturnCashDiscount,0.000)+ ISNULL(tbl.SalesReturnCouponDiscount,0.000) + ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) <= 0 THEN 0

					ELSE

					(tbl.SalesReturnGrossAmt - ISNULL(tbl.SalesReturnCashDiscount,0.000)-ISNULL(tbl.SalesReturnCouponDiscount,0.000) - ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tbl.SalesReturnGrossAmt -
					(ISNULL(tbl.SalesReturnCashDiscount,0.000)+ ISNULL(tbl.SalesReturnCouponDiscount,0.000) + ISNULL(tbl.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) END ) END) AS

					 RefundAmount       -- added by pranay on 20.12.2022>

            ,CASE WHEN CodPayment - (CASE WHEN (tblinv.SalesReturnGrossAmt - ISNULL(tblinv.SalesReturnCashDiscount,0.000)-ISNULL(tblinv.SalesReturnCouponDiscount,0.000) - ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tblinv.SalesReturnGrossAmt -
					(ISNULL(tblinv.SalesReturnCashDiscount,0.000)+ ISNULL(tblinv.SalesReturnCouponDiscount,0.000) + ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) <= 0 THEN 0

					ELSE

					(tblinv.SalesReturnGrossAmt - ISNULL(tblinv.SalesReturnCashDiscount,0.000)-ISNULL(tblinv.SalesReturnCouponDiscount,0.000) - ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tblinv.SalesReturnGrossAmt -
					(ISNULL(tblinv.SalesReturnCashDiscount,0.000)+ ISNULL(tblinv.SalesReturnCouponDiscount,0.000) + ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) END ) < 0 THEN CodPayment

					ELSE
					 (CASE WHEN (tblinv.SalesReturnGrossAmt - ISNULL(tblinv.SalesReturnCashDiscount,0.000)-ISNULL(tblinv.SalesReturnCouponDiscount,0.000) - ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tblinv.SalesReturnGrossAmt -
					(ISNULL(tblinv.SalesReturnCashDiscount,0.000)+ ISNULL(tblinv.SalesReturnCouponDiscount,0.000) + ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) <= 0 THEN 0

					ELSE

					(tblinv.SalesReturnGrossAmt - ISNULL(tblinv.SalesReturnCashDiscount,0.000)-ISNULL(tblinv.SalesReturnCouponDiscount,0.000) - ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000)) > 0 Then
					CONVERT(numeric(10,3),((ISNULL(inv.CouponDiscount,0.000) + ISNULL(inv.PromoDiscount,0.000))/(inv.InvoiceVal + ISNULL(inv.CouponDiscount,0.000)
					+ ISNULL(inv.PromoDiscount,0.000)))*(tblinv.SalesReturnGrossAmt -
					(ISNULL(tblinv.SalesReturnCashDiscount,0.000)+ ISNULL(tblinv.SalesReturnCouponDiscount,0.000) + ISNULL(tblinv.SalesReturnSSCurrencyValue,0.000)))) ELSE 0.000 END ))
					)- ISNULL(OnlineRefundAmount,0) END ) END AS

					 OrderRefundAmount

			,GETDATE() AS CreatedDate,GETDATE() AS UpdatedDate,0 AS IsProcessed
			,CASE WHEN ord.RoundofSign = '+' THEN   ord.OrderBillAmount + ord.RoundofVal ELSE  ord.OrderBillAmount - ord.RoundofVal END AS Net

            FROM Orders.tblSalesReturn tsr with(NOLOCK)     -- updated by pranay on 20.12.2022
			INNER JOIN Orders.tblInvoice inv with(nolock) on inv.InvoiceId = tsr.InvoiceId
			INNER JOIN Orders.tblOrder ord with(nolock) on Inv.OrderId =ord.OrderId
			INNER JOIN
			(
			SELECT opg.OrderId,SUM(Amount) AS CodPayment FROM PaymentManagement.tblOrderPayment opg with(nolock)
			INNER JOIN PaymentManagement.tblpayment pg with(nolock) on opg.paymentId =pg.PaymentId
			WHERE  pg.PayMethodId IN (7,5)
			GROUP BY opg.OrderId
			) opg on ord.OrderId = opg.OrderId

			LEFT JOIN (SELECT OrderId,SUM(RefundAmount) AS OnlineRefundAmount FROM PaymentManagement.tblRefundOrderPayment WHERE RefundReasonId IN (3,7)
					GROUP BY OrderId) ropo on inv.OrderId = ropo.OrderId

            -- <added by pranay on 20.12.2022
            INNER JOIN (

			SELECT sr.SalesReturnId,ISNULL(SalesReturnGrossAmt,0) AS SalesReturnGrossAmt
			,ISNULL(SalesReturnCashDiscount,0) AS SalesReturnCashDiscount
			,ISNULL(SalesReturnCouponDiscount,0) AS SalesReturnCouponDiscount
			,ISNULL(SalesReturnSSCurrencyValue,0) AS SalesReturnSSCurrencyValue

				   FROM

				   (
						  SELECT s.SalesReturnId,s.InvoiceId,SUM(ii.ItemBasePrice*si.AcceptedQty) AS SalesReturnGrossAmt
						  ,SUM((ii.ItemDiscount*si.AcceptedQty)/ii.ItemQuantity) AS SalesReturnCashDiscount --check si.ItemDiscount/si.AcceptedQty
						  ,SUM(ISNULL(CONVERT(numeric(10,3),(ii.CouponDiscount*si.AcceptedQty)/ItemQuantity),0.00)) AS SalesReturnCouponDiscount
						  ,SUM(ISNULL(CONVERT(numeric(10,3),(ii.SSCurrencyValue*si.AcceptedQty)/ItemQuantity),0.00)) AS SalesReturnSSCurrencyValue
						  FROM Orders.tblSalesReturn s WITH(NOLOCK)
						  INNER JOIN Orders.tblSalesReturnItemCust si WITH(NOLOCK) on s.SalesReturnId = si.SalesReturnId
						  INNER JOIN (select distinct SalesReturnItemId from #tblInvoiceOrder) i on si.SalesReturnItemId = i.SalesReturnItemId
						  INNER JOIN  Orders.tblInvoiceItem ii WITH(NOLOCK) on si.InvoiceItemId = ii.InvoiceItemId
						 WHERE si.SalesReturnStatusId IN (6)
						 AND  ReturnQty !=0
						 AND ISNULL(CONVERT(DATE,si.ClosedDate),CONVERT(DATE,si.Updateddate))= @vDT
						 AND ISNULL(IsWalletRefundInitiated,0)=0
						 AND CONVERT(DATE,si.CreatedDate)>= '08/09/2021'
						 AND  ISNULL(si.PaymentPefMode,'') IN ('', 'B')
						   GROUP BY s.SalesReturnId,s.InvoiceId

				   ) sr


				) tbl on tsr.SalesReturnId = tbl.SalesReturnId      -- added by pranay on 20.12.2022>


			LEFT JOIN (

			SELECT sr.InvoiceId,ISNULL(SalesReturnGrossAmt,0) AS SalesReturnGrossAmt
			,ISNULL(SalesReturnCashDiscount,0) AS SalesReturnCashDiscount
			,ISNULL(SalesReturnCouponDiscount,0) AS SalesReturnCouponDiscount
			,ISNULL(SalesReturnSSCurrencyValue,0) AS SalesReturnSSCurrencyValue

				   FROM

				   (
						  SELECT s.InvoiceId,SUM(ii.ItemBasePrice*si.AcceptedQty) AS SalesReturnGrossAmt
						  ,SUM((ii.ItemDiscount*si.AcceptedQty)/ii.ItemQuantity) AS SalesReturnCashDiscount --check si.ItemDiscount/si.AcceptedQty
						  ,SUM(ISNULL(CONVERT(numeric(10,3),(ii.CouponDiscount*si.AcceptedQty)/ItemQuantity),0)) AS SalesReturnCouponDiscount
						  ,SUM(ISNULL(CONVERT(numeric(10,3),(ii.SSCurrencyValue*si.AcceptedQty)/ItemQuantity),0)) AS SalesReturnSSCurrencyValue
						  FROM Orders.tblSalesReturn s WITH(NOLOCK)
						  INNER JOIN Orders.tblSalesReturnItemCust si WITH(NOLOCK) on s.SalesReturnId = si.SalesReturnId
						  INNER JOIN (select distinct SalesReturnItemId from #tblInvoiceOrder) i on si.SalesReturnItemId = i.SalesReturnItemId
						  INNER JOIN  Orders.tblInvoiceItem ii WITH(NOLOCK) on si.InvoiceItemId = ii.InvoiceItemId
						 WHERE si.SalesReturnStatusId IN (6)
						 AND  ReturnQty !=0
						 AND ISNULL(CONVERT(DATE,si.ClosedDate),CONVERT(DATE,si.Updateddate))= @vDT
						 AND ISNULL(IsWalletRefundInitiated,0)=0
						 AND CONVERT(DATE,si.CreatedDate)>= '08/09/2021'
						 AND  ISNULL(si.PaymentPefMode,'') IN ('', 'B')

						   GROUP BY s.InvoiceId

				   ) sr

				) tblinv on inv.InvoiceId = tblinv.InvoiceId

			WHERE inv.InvUserType IS NULL AND ord.OrderStatusId NOT IN (6,7,13)

			AND ord.HBId NOT IN (10149,369097,3629417,3632944,4778526) and ord.OrderId in ('33242004837')--('33342052958','32841841394','33242004837')
			) inv


			LEFT JOIN (SELECT OrderId,SUM(RefundAmount) AS WalletReverse
					FROM
					(
					select OrderId,RefundAmount AS RefundAmount  from   [PaymentManagement].[tblWalletRefund]
					UNION
					SELECT OrderId,RefundAMount FROM [PaymentManagement].[tblRefundOrderPaymentForQC] WHERE RefundReasonId=3
					 UNION
                    SELECT OrderId, RefundAmount
                    FROM [PaymentManagement].[tblRefundOrderPaymentForUPI] WHERE RefundStatusId !=4
					)tbl

					GROUP BY OrderId) toref on inv.OrderId = toref.OrderId


--) o
--INNER JOIN UserManagement.tblUser u WITH(NOLOCK) on o.CustUserId = u.UserId
--INNER JOIN PaymentManagement.tblOrderPaymentGetway opg with(nolock) on o.OrderId = opg.OrderId
--INNER JOIN PaymentManagement.tblPaymentGetway pg with(nolock) on opg.PaymentGetwayTransacNo = pg.PaymentGetwayTransacNo
--INNER JOIN PaymentManagement.tblOrderPayment op WITH(NOLOCK) on o.OrderId =op.OrderId
--INNER JOIN PaymentManagement.tblPayment p WITH(NOLOCK) on op.PaymentId = p.PaymentId
--LEFT JOIN (SELECT OrderId,SUM(RefundAmount) AS RefundAmount FROM PaymentManagement.tblRefundOrderPayment WITH(NOLOCK)
--					GROUP BY OrderId) rop on o.OrderId = rop.OrderId
--WHERE p.PayMethodId = 3
--AND p.Amount - ISNULL(rop.RefundAmount,0.000) > 0.000
--AND ISNULL(pg.PaymentGateWay,'') != 'MPOS'

UPDATE B SET B.IsWalletRefundInitiated =1 FROM #tblInvoiceOrder A
INNER JOIN Orders.tblSalesReturnItem B on A.SalesReturnItemId = B.SalesReturnItemId

UPDATE B SET B.IsWalletRefundInitiated =1 FROM #tblInvoiceOrder A
INNER JOIN Orders.tblSalesReturnItemCust B on A.SalesReturnItemId = B.SalesReturnItemId



    END TRY
    BEGIN CATCH

        /*Log error details*/
        INSERT INTO dbo.tblSSSPLError(ErrorNo,ErrorSeverity,ErrorState,ErrorProcedure,ErrorLine,ErrorMsg)
        SELECT ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(),ERROR_PROCEDURE(),ERROR_LINE(),ERROR_MESSAGE()

    END CATCH
END
GO
