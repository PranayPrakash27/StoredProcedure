SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Tanmoy
-- Create date: 09-Aug-2017
-- Description:	Sales Return Automatic Refund
-- =============================================
CREATE PROCEDURE [PaymentManagement].[uspInsertRefundListforSalesReturnAfter9thAug21]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  DECLARE
    @pPaymentStartDate datetime,
    @pPaymentEndDate  datetime,
	@pSalesReturnStartDate datetime,
	@pSalesReturnEndDate datetime

BEGIN TRY


SELECT  @pPaymentEndDate = MAX(Updateddate)  FROM PaymentManagement.tblRefundOrderPayment
SELECT @pSalesReturnStartDate = MAX(RunDate) FROM dbo.tblScheduler  WHERE SchedulerName = 'Online Refund Against Return'
  ---SET @pPaymentStartDate = ISNULL(@pPaymentStartDate,'2017-03-20 11:00:00.000')
  ---SET @pPaymentEndDate = DATEADD(MINUTE,-30,GETDATE())
  SET @pSalesReturnStartDate = ISNULL(@pSalesReturnStartDate,GETDATE()-1)
  SET @pSalesReturnEndDate = GETDATE()

CREATE TABLE #tblInvoiceOrder(InvoiceId bigint,InvoiceItemId bigint,AcceptedQty numeric(10,2),IsfullSalesReturn bit,SalesReturnItemId BIGINT)
INSERT INTO #tblInvoiceOrder
SELECT s.InvoiceId,si.InvoiceItemId,si.ReturnQty,s.IsFullReturn,si.SalesReturnItemId
FROM Orders.tblSalesReturn s
INNER JOIN Orders.tblSalesReturnItemCust si on s.SalesReturnId = si.SalesReturnId
WHERE si.SalesReturnStatusId = 6
and  ReturnQty !=0
AND ISNULL(si.IsOnlineRefundInitiated,0)=0
AND ISNULL(si.ClosedDate,si.UpdatedDate) > @pSalesReturnStartDate AND ISNULL(si.ClosedDate,si.UpdatedDate) <= @pSalesReturnEndDate
AND CONVERT(DATE,si.Createddate)>= '08/09/2021'
AND s.InvoiceId NOT IN (17050680,7632397,7583914,9404921,99905951,9905952,9348382,9713242,9786627,9857336,10033761,10169341,9948956,13486803,17684222,
17683083,16828136,19740862,20714644,24700536) -- added by hiranmoy on 4.12.2018
AND s.InvoiceId NOT IN (select distinct i.InvoiceId from Orders.tblInvoice i with(nolock)
inner join Orders.tblOrder o on i.OrderId =o.OrderId
WHERE o.OrderStatusId in (7,13))



INSERT INTO  [PaymentManagement].[tblRefundOrderPayment](OrderId,RefundAmount,CustName,CustMobileNo,PaymentGetwayTransacNo,GetWayResponse,PaymentGateWay
				,OrderDate,AppType,CustUserId,EmailId,TotalPayAmount,IsRefundInitiated,InitialRefundStatus,PaymentGetwayId,CreatedBy,UpdatedBy,CreatedDate
				,UpdatedDate,GateWayPayId,PaymentStatus,SalesReturnDate,RefundReason,RefundReasonId,CustomerReferenceNo,Dateparam,PgModule,OrdOrderType)

SELECT o.OrderId,CASE WHEN op.Amount - (o.RefundAmount+ISNULL(rop.RefundAmount,0))  > 0.00 THEN o.RefundAmount ELSE op.Amount - ISNULL(rop.RefundAmount,0) END,dbo.udfGetUserFullName(o.CustUserId) AS CustName
				,u.MobileNo AS CustMobileNo,ISNULL(CONVERT(VARCHAR(100),pg.SpecialGateWayTransacNo),CONVERT(VARCHAR(100),pg.PaymentGetwayTransacNo)) AS PaymentGetwayTransacNo
				,pg.GetwayResponse
				,pg.PaymentGateWay,pg.CreatedDate,pg.ApplicationType AS AppType,o.CustUserId,u.EmailId
				,op.Amount
				,1,'Refund Initialize'
				,pg.PaymentGetwayId
				,10001,10001
				,@pPaymentEndDate
				,@pPaymentEndDate
				,pg.GetwayPayId
				,pg.GetwayPayStatus
				,@pSalesReturnEndDate
				,'Refund For Sales Return'
				,3,pg.CustomerReferenceNo,@pSalesReturnStartDate,ISNULL(pg.Module,'SSPL'),o.OrderType
FROM (

			SELECT inv.OrderId,inv.OrderType,inv.CustUserId,
			(SalesReturnGrossAmt - ISNULL(SalesReturnCashDiscount,0.00)-ISNULL(SalesReturnCouponDiscount,0.00) - ISNULL(SalesReturnSSCurrencyValue,0.00)
					-
					((Case When (inv.InvoiceVal + ISNULL(inv.BankDisc,0)+ ISNULL(inv.CouponDiscount,0.00) + ISNULL(inv.PromoDiscount,0.00)) > 0 Then
					CONVERT(numeric(10,2),((ISNULL(inv.CouponDiscount,0.00) + ISNULL(inv.BankDisc,0) + ISNULL(inv.PromoDiscount,0.00))/(inv.InvoiceVal + ISNULL(inv.BankDisc,0)+ + ISNULL(inv.CouponDiscount,0.00)
					+ ISNULL(inv.PromoDiscount,0.00)))*(SalesReturnGrossAmt -
					(ISNULL(SalesReturnCashDiscount,0.00)+ ISNULL(SalesReturnCouponDiscount,0.00) + ISNULL(SalesReturnSSCurrencyValue,0.00)))) ELSE 0.00 END ))
					) AS RefundAmount

			FROM Orders.tblInvoice inv with(nolock)
			INNER JOIN
			(SELECT op.OrderId,SUM(p.Amount) AS Amount FROM PaymentManagement.tblOrderPayment op with(nolock)
			INNER JOIN PaymentManagement.tblPayment p with(nolock) on op.PaymentId = p.PaymentId
			WHERE p.PayMethodId = 3 AND Paypurpose = 'SP'

			GROUP BY op.OrderId
			) op on inv.OrderId =op.OrderId

			LEFT JOIN (SELECT OrderId,SUM(RefundAmount) AS RefundAmount FROM PaymentManagement.tblRefundOrderPayment
					GROUP BY OrderId) rop on inv.OrderId = rop.OrderId

			INNER JOIN (

			SELECT sr.InvoiceId,ISNULL(SalesReturnGrossAmt,0) AS SalesReturnGrossAmt
			,ISNULL(SalesReturnCashDiscount,0) AS SalesReturnCashDiscount
			,ISNULL(SalesReturnCouponDiscount,0) AS SalesReturnCouponDiscount
			,ISNULL(SalesReturnSSCurrencyValue,0) AS SalesReturnSSCurrencyValue

				   FROM

				   (
						  SELECT s.InvoiceId,SUM(ii.ItemBasePrice*si.ReturnQty) AS SalesReturnGrossAmt
						  ,SUM((ii.ItemDiscount*si.ReturnQty)/ii.ItemQuantity) AS SalesReturnCashDiscount --check si.ItemDiscount/si.AcceptedQty
						  ,SUM(ISNULL(CONVERT(numeric(10,2),(ii.CouponDiscount*si.ReturnQty)/ItemQuantity),0)) AS SalesReturnCouponDiscount
						  ,SUM(ISNULL(CONVERT(numeric(10,2),(ii.SSCurrencyValue*si.ReturnQty)/ItemQuantity),0)) AS SalesReturnSSCurrencyValue
						  FROM Orders.tblSalesReturn s WITH(NOLOCK)
						  INNER JOIN Orders.tblSalesReturnItemCust si WITH(NOLOCK) on s.SalesReturnId = si.SalesReturnId
						    INNER JOIN (select distinct InvoiceId from #tblInvoiceOrder) i on s.InvoiceId = i.InvoiceId
						  INNER JOIN  Orders.tblInvoiceItem ii WITH(NOLOCK) on si.InvoiceItemId = ii.InvoiceItemId
						  WHERE si.SalesReturnStatusId = 6  --AND ISNULL(i.IsfullSalesReturn,0) = 0
						   and ReturnQty !=0
						   AND ISNULL(si.IsOnlineRefundInitiated,0)=0
						   AND CONVERT(DATE,si.Createddate)>= '08/09/2021'
						   AND s.InvoiceId NOT IN (17050680,7632397,7583914,9404921,99905951,9905952,9348382,9713242,9786627,9857336,10033761,10169341,9948956,13486803,17684222,
17683083,16828136,19740862,20714644,24700536) -- added by hiranmoy on 4.12.2018
						  AND ISNULL(si.ClosedDate,si.UpdatedDate) > @pSalesReturnStartDate AND ISNULL(si.ClosedDate,si.UpdatedDate) <= @pSalesReturnEndDate
						  AND s.InvoiceId NOT IN
						  (
							 select distinct i.InvoiceId from Orders.tblInvoice i with(nolock)
							INNER JOIN (select distinct InvoiceId from #tblInvoiceOrder) s on s.InvoiceId = i.InvoiceId
							inner join Orders.tblOrder o on i.OrderId =o.OrderId
							and o.OrderStatusId in (7,13)
						  )
						   GROUP BY s.InvoiceId
				   ) sr
				) tbl on inv.InvoiceId = tbl.InvoiceId
			WHERE inv.InvUserType IS NULL
			--UNION

			--SELECT inv.OrderId,inv.CustUserId,p.Amount - ISNULL(RefundAmount,0) AS RefundAmount
			--FROM Orders.tblInvoice inv
			--INNER JOIN Orders.tblSalesReturn sr on inv.InvoiceId = sr.InvoiceId
			-- INNER JOIN (select distinct InvoiceId,IsfullSalesReturn from #tblInvoiceOrder) tmp on inv.InvoiceId = tmp.InvoiceId
			--INNER JOIN PaymentManagement.tblOrderPayment op on inv.OrderId =op.OrderId
			--INNER JOIN PaymentManagement.tblPayment p on op.PaymentId = p.PaymentId
			--inner JOIN (SELECT OrderId,OrderStatusId FROM Orders.tblOrder) rfo on inv.OrderId = rfo.OrderId
			--LEFT JOIN (SELECT OrderId,SUM(RefundAmount) AS RefundAmount FROM PaymentManagement.tblRefundOrderPayment
			--		GROUP BY OrderId) rop on inv.OrderId = rop.OrderId
			--WHERE rfo.OrderstatusId NOT IN (7,13) AND ISNULL(tmp.IsfullSalesReturn,0) = 1
			--AND p.Amount - ISNULL(RefundAmount,0) >0
			--AND p.PayMethodId = 3 AND Paypurpose = 'SP'
			--and inv.InvUserType IS NULL
			--AND NOT EXISTS (SELECT r.OrderId FROM PaymentManagement.tblRefundOrderPayment r INNER JOIN Orders.tblInvoice i on r.OrderId = i.OrderId
			--inner join (select distinct InvoiceId from #tblInvoiceOrder) tmp on i.InvoiceId = tmp.InvoiceId  WHERE RefundReasonId=3)
) o
INNER JOIN UserManagement.tblUser u WITH(NOLOCK) on o.CustUserId = u.UserId
INNER JOIN PaymentManagement.tblOrderPaymentGetway opg with(nolock) on o.OrderId = opg.OrderId
INNER JOIN PaymentManagement.tblPaymentGetway pg with(nolock) on opg.PaymentGetwayTransacNo = pg.PaymentGetwayTransacNo
INNER JOIN
			(SELECT op.OrderId,SUM(p.Amount) AS Amount FROM PaymentManagement.tblOrderPayment op with(nolock)
			INNER JOIN PaymentManagement.tblPayment p with(nolock) on op.PaymentId = p.PaymentId
			WHERE p.PayMethodId = 3 AND Paypurpose = 'SP'

			GROUP BY op.OrderId
			) op on o.OrderId =op.OrderId
LEFT JOIN (SELECT OrderId,SUM(RefundAmount) AS RefundAmount FROM PaymentManagement.tblRefundOrderPayment WITH(NOLOCK)
					GROUP BY OrderId) rop on o.OrderId = rop.OrderId
WHERE  op.Amount - ISNULL(rop.RefundAmount,0.00) > 0.00
AND ISNULL(pg.PaymentGateWay,'') != 'MPOS'



UPDATE B SET B.IsOnlineRefundInitiated =1 FROM #tblInvoiceOrder A
INNER JOIN Orders.tblSalesReturnItem B on A.SalesReturnItemId = B.SalesReturnItemId


UPDATE B SET B.IsOnlineRefundInitiated =1 FROM #tblInvoiceOrder A
INNER JOIN Orders.tblSalesReturnItemCust B on A.SalesReturnItemId = B.SalesReturnItemId


    END TRY
    BEGIN CATCH

        /*Log error details*/
        INSERT INTO dbo.tblSSSPLError(ErrorNo,ErrorSeverity,ErrorState,ErrorProcedure,ErrorLine,ErrorMsg)
        SELECT ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(),ERROR_PROCEDURE(),ERROR_LINE(),ERROR_MESSAGE()

    END CATCH
END
GO
